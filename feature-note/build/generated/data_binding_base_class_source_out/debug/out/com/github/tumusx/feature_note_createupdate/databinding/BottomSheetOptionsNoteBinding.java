// Generated by view binder compiler. Do not edit!
package com.github.tumusx.feature_note_createupdate.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.tumusx.feature_note_createupdate.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetOptionsNoteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RadioGroup rdBackgroundColor;

  @NonNull
  public final RadioButton rdBlueColor;

  @NonNull
  public final RadioButton rdColorBlack;

  @NonNull
  public final RadioButton rdColorPurple;

  @NonNull
  public final RadioButton rdGreenColor;

  @NonNull
  public final RadioButton rdRedColor;

  @NonNull
  public final RadioButton rdTealBlueColor;

  @NonNull
  public final TextView textView;

  private BottomSheetOptionsNoteBinding(@NonNull ConstraintLayout rootView,
      @NonNull RadioGroup rdBackgroundColor, @NonNull RadioButton rdBlueColor,
      @NonNull RadioButton rdColorBlack, @NonNull RadioButton rdColorPurple,
      @NonNull RadioButton rdGreenColor, @NonNull RadioButton rdRedColor,
      @NonNull RadioButton rdTealBlueColor, @NonNull TextView textView) {
    this.rootView = rootView;
    this.rdBackgroundColor = rdBackgroundColor;
    this.rdBlueColor = rdBlueColor;
    this.rdColorBlack = rdColorBlack;
    this.rdColorPurple = rdColorPurple;
    this.rdGreenColor = rdGreenColor;
    this.rdRedColor = rdRedColor;
    this.rdTealBlueColor = rdTealBlueColor;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetOptionsNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetOptionsNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_options_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetOptionsNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rdBackgroundColor;
      RadioGroup rdBackgroundColor = ViewBindings.findChildViewById(rootView, id);
      if (rdBackgroundColor == null) {
        break missingId;
      }

      id = R.id.rdBlueColor;
      RadioButton rdBlueColor = ViewBindings.findChildViewById(rootView, id);
      if (rdBlueColor == null) {
        break missingId;
      }

      id = R.id.rdColorBlack;
      RadioButton rdColorBlack = ViewBindings.findChildViewById(rootView, id);
      if (rdColorBlack == null) {
        break missingId;
      }

      id = R.id.rdColorPurple;
      RadioButton rdColorPurple = ViewBindings.findChildViewById(rootView, id);
      if (rdColorPurple == null) {
        break missingId;
      }

      id = R.id.rdGreenColor;
      RadioButton rdGreenColor = ViewBindings.findChildViewById(rootView, id);
      if (rdGreenColor == null) {
        break missingId;
      }

      id = R.id.rdRedColor;
      RadioButton rdRedColor = ViewBindings.findChildViewById(rootView, id);
      if (rdRedColor == null) {
        break missingId;
      }

      id = R.id.rdTealBlueColor;
      RadioButton rdTealBlueColor = ViewBindings.findChildViewById(rootView, id);
      if (rdTealBlueColor == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      return new BottomSheetOptionsNoteBinding((ConstraintLayout) rootView, rdBackgroundColor,
          rdBlueColor, rdColorBlack, rdColorPurple, rdGreenColor, rdRedColor, rdTealBlueColor,
          textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
